nav#sidebar
  <i onClick='showSidebar(this)' class="fa-solid fa-bars" style="color: #2e3436;"></i>
  ul
    li(class=(selectedCategory==='Home'?'active':''))
      a(href='/') Home
    each category in categories
      li(class=(selectedCategory === category.name ? "active" : ""))
        a(href=`/category/${category._id}`) #{category.name}
        div(style=`display: ${selectedCategory === category.name ?'flex':'none'}`)
          <i onClick='showCategoryEditForm(this)' data-category-id='#{category._id}' class="fa-solid fa-pen-to-square"></i>
          form(method='POST' action=`/category/${category._id}/delete`)
            button.category_delete_btn(type='submit') 
              <i class="fa-solid fa-trash"></i>
      
      if errors
        ul(style=`display: ${selectedCategory === category.name ?'flex':'none'};color: rebeccapurple;padding:0px`)
          each error in errors
            li= error.msg
  if currentUser
    button.create_category_btn(onClick='showCategoryCreateForm(this)') Create

    script.
      const activeListItem = document.querySelector(".active");
      let formToBeAddedHtml;

      function showCategoryEditForm(item) {
        const categoryId = item.getAttribute("data-category-id");
        const formToBeAddedStr =
          `<form method='POST' class='categoryUpdateForm' action=/category/${categoryId}/update>` +
          "<input type='text' name='categoryName' value='" +
          activeListItem.childNodes[0].textContent +
          "'/>" +
          "<button type='submit'><i class='fa-solid fa-check fa-xl' style='color: #4e9a06;'></i></button>" +
          "<i onClick='removeForm()' class='fa-solid fa-xmark fa-lg' style='color: #ff0000;'></i>" +
          "</form>";

        const parser = new DOMParser();
        const doc = parser.parseFromString(formToBeAddedStr, "text/html");
        formToBeAddedHtml = doc.body.firstChild;

        activeListItem.parentNode.replaceChild(formToBeAddedHtml, activeListItem);
      }

      function removeForm() {
        formToBeAddedHtml.parentNode.replaceChild(activeListItem, formToBeAddedHtml);
      }

      const isCategoryAdditionHappening = false;
      let createCategoryFormHtml;

      function showCategoryCreateForm(createCategoryBtn) {
        const createCategoryFormStr =
          `<form method='POST' class='categoryCreateForm' action=${
            window.location.pathname === "/"
              ? "category/createcategory" // this is required to handle the request from category route handler, which is easy to do
              : window.location.pathname + "/createcategory"
          }>` +
          "<input type='text' minlength='3' maxlength='16' name='categoryName' value='' required/>" +
          "<button type='submit'><i class='fa-solid fa-check fa-xl' style='color: #4e9a06;'></i></button>" +
          "<i onClick='removeCreateForm()' class='fa-solid fa-xmark fa-lg' style='color: #ff0000;'></i>" +
          "</form>";

        const parser = new DOMParser();
        const doc = parser.parseFromString(createCategoryFormStr, "text/html");
        createCategoryFormHtml = doc.body.firstChild;

        createCategoryBtn.previousElementSibling.appendChild(createCategoryFormHtml);
      }

      function removeCreateForm() {
        createCategoryFormHtml.parentNode.removeChild(createCategoryFormHtml);
      }

      let isSidebarShown = false;
      function showSidebar(icon){
        const sidebar = document.querySelector('#sidebar');
        
        if(!isSidebarShown){
          sidebar.style.left = '0px'
          isSidebarShown= true;
        }else{
          sidebar.style.left='-220px'
          isSidebarShown = false;
        }
      }